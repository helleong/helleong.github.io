<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Markdown]]></title>
    <url>%2F2017%2F10%2F17%2FMarkdown%2F</url>
    <content type="text"><![CDATA[前言码字成风的年代，要是没点文字的积累就显得太low了。鉴于目前国内的言论抓得比较严，而且传统的博客网站说关就关，所以就跟风加入了全世界最大的“同性恋交友平台”——Github，并且结合hexo快速搭建了这个静态网站，详细请阅→通过GitHub-Page-Hexo搭建个人网站 Markdown Markdown的目标是实现「易读易写」。 Markdown由于简单易用，省去了大量文字排版和字体样式设置的工作，备受极客、文字工作者的青睐。 总结优点如下： 专注文字内容，减少格式干扰 学习门槛较低，可以快读上手 减少鼠标操作，可以只用键盘 语法标题标记：#（#+空格+标题名）备注：支持六个级别的标题，#的数量代表级别 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 分割线标记：***第一行 第二行 列表标记： 1.（序号数字+.+空格+内容） -（-+空格+内容）备注：分为有序列表和无序列表，可结合tab缩进实现列表的嵌套 列表1 列表2 列表3 引用标记：&gt;（&gt;+空格+内容）备注：引用也可以嵌套 我是引用 强调标记：*（+内容）**（**+内容）备注：一个 包含一段文本表示斜体；两个包含一段文本表示粗体 粗体**粗体 代码标记：Tab（Tab缩进）、`（小句号，和波浪号在同一按键上）备注：–代码行：单小句号对可以实现代码行效果；–代码区：选中代码区，使用Tab键进行多行缩进，实现代码区块效果（注意代码区要独立成段，且每行都要缩进）。另外，在代码区前一行和后一行写三个小句号（占一行）也可以简便地实现区块效果。 链接标记：[]()（[ ]中放显示文本，()中放链接地址）备注：–内联方式，满足一般使用需求，直观方便，即用即写。–引用方式，适合添加多个网址的文章，可以避免在正文中出现大量网址，保持编辑可读性；也适合同一网址多处引用，当网址有改动或修改时，只需修改列表即可，无需逐个修改，类似宏定义。内联方式：[Helleong](https://helleong.github.io)引用方式： [百度][1] [谷歌][2] [1]: http://www.baidu.com &quot;百度&quot; [2]: http://www.google.com &quot;谷歌&quot; 图片标记：![]()（[ ]中放图片说明，()中放图片链接） 脚注标记：[^1]+[^1]:注释内容（[^1]是角标，[^1]:注释内容是对应的注释列表，必须一一对应）12markdown[^1] [^1]:标记语言 表格标记：|和-和:组合备注：–|和|之间形成单元格。–第一行为表头，内容默认加粗居中。–第二行-和：组合，标记本列单元格对齐方式。无:号，为默认左对齐；两端:为居中；左、右其中一端:向该侧对齐。–其余行为普通单元格。 第二行不可省略，否则语法不完整 表格必须为整段，中间不能有空行 123456| 表头 | 表头 | 表头 | | ------- |:-------:| -----: || 11 |12 |13 || 21 |22 |23 || 31 |32 |33 || 41 |42 |43 | 表头 表头 表头 11 12 13 21 22 23 31 32 33 41 42 43 参考文章：http://www.jianshu.com/p/8c1d594afd85]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过GitHub Page + Hexo搭建个人网站]]></title>
    <url>%2F2017%2F10%2F10%2F%E9%80%9A%E8%BF%87GitHub-Page-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[Github入门Github的理由很简单，看了下图就知道了↓ Github作为现在最流行的代码仓库： 具有版本管理功能 具有完善的团队协助管理 每一个项目都有独立的主页，放置项目的源代码 编写文档神器（支持MarkDown） 总而言之就是居家必备的神器。 顺便安利一个在线学习Github操作的网站→Learn Git Branching GitHub Page GitHub Pages 可以被认为是用户编写的、托管在 GitHub 上的静态网页。 GitHub Pages 有 300M 免费空间，无需自己搭建服务器 资料自己管理，保存可靠，不会突然被删 使用标记语言MarkDown 可以绑定自己的域名 正因为Github允许用户自己编写网页，然后上传到服务器上，所以可以利用这一个特点搭建个人网站。 HexoHexo是一款基于Node.js的静态博客框架，可以方便的生成静态网页托管在GitHub上，是搭建博客的首选框架。 除此之外，还有很多开发者在此基础上制作的主题，这里推荐用NexT。 搭建教程网上有一堆关于这方面的教程，我就不班门弄斧重新写一遍了。 传送门→GitHub+Hexo 搭建个人网站详细教程 。 另外再推荐一款工具→Hexo Admin with Qiniu。 定制化主题直接套用别人的主题固然来得方便快捷，而且NexT主题也提供了大量的配置供用户修改，但是可能也会存在和自己的想法有出入的地方，那就需要自己进行修改了（前提需要有一定的Node.js基础 修改文章内链接文本样式**实现效果图 **具体实现方法 修改文件themes\next\source\css\_common\components\post\post.styl，在末尾添加如下css样式： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 其中选择.post-body是为了不影响标题，选择p是为了不影响首页“阅读全文”的显示样式，颜色可以自己定义。 修改文章底部的那个带#号的标签**实现效果图 **具体实现方法 修改模板/themes/next/layout/_macro/post.swig，搜索rel=&quot;tag&quot;&gt;#，将#换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 修改代码块自定义样式**实现效果图 **具体实现方法 打开\themes\next\source\css\_custom\custom.styl,向里面加入：(颜色可以自己定义)123456789101112131415// Custom styles.code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 主页文章添加阴影效果**实现效果图 **具体实现方法 打开\themes\next\source\css\_custom\custom.styl,向里面加入：12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 修改网页底部的桃心**具体实现方法打开themes/next/layout/_partials/footer.swig，找到：&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;，然后在图标库中找到你自己喜欢的图标进行替换就可以了。 文章加密访问**实现效果图 **具体实现方法 打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码： 代码如下： 12345678910&lt;script&gt; (function()&#123; if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; alert(&apos;密码错误！&apos;); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后在文章上写成类似这样： 博文置顶修改hero-generator-index插件，把文件：node_modules/hexo-generator-index/lib/generator.js内的代码替换为：12345678910111213141516171819202122232425262728&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, &#123; perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: &#123; __index: true &#125; &#125;);&#125;; 在文章中添加top值，数值越大文章越靠前，如 12345678---title: 解决Charles乱码问题date: 2017-05-22 22:45:48tags: 技巧categories: 技巧copyright: truetop: 100--- 修改字体大小打开\themes\next\source\css\ _variables\base.styl文件，将$font-size-base改成16px，如下所示：1$font-size-base=16px 通过主题配置文件进行定制的功能 修改头像 增加分类、标签、关于 增加统计字数功能 开启动态背景 增加版权信息 增加来必应评论功能 隐藏底部powered By Hexo / 强力驱动 在主页只显示文章的部分内容 修改文章显示宽度 设置页面文章的篇数 开启搜索功能 修改文章不自动显示侧边栏 增加侧边栏社交图标和联系方式 开启不蒜子的访问统计功能 开启百度统计功能 开启阅读次数统计功能 参考文章：next主题个性化配置教程]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
